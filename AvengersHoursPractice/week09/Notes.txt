Arrays Utility Class:
    - binarySearch method()

MultiDimensional Arrays: 2D, 3D, 4D

        n dimensional array : contains (n-1) dimensional arrays

        2 Dimesional Array: contains 1 dimensional arrays
        arr2D = {
          {1,2,3} = index 0 for 2D array
           0 1 2         {4,5} = index 1 for 2D array
                          0 1         {7,8,9,4} = index 2 for 2D array
        }                              0 1 2 3

        number 8 : arr2D [2][1]

 ************ Methods:   ***********************
 - reusable
 exp: str.length() ---> takes no parameter, return type: integer
       str.charAt(index) ---> takes parameter(integer which reps. index), returning Char

   Custom Methods/Functions

   syntax of custom methods
   Access-Modifier specifier return-type methodName(Parameter){
   statement
   }
   Access-Modifier: public, private, protected, default

   specifier: static, final, abstract

   return-Type: void, and any dataType (String, int, Array...)

   parameter : any data Type (String, int, Array...)

Void Methods:
1) With Parameters
2) No Parameters

Non-Void / Return Type Methods
1) With Params
2) No Params
Debugging
Step Over: runs the line and does not go into the method body
Step into: goes inside the method line by line
step out : completes all the steps in the method and takes you out back to main method

When we create custom Methods 3 possible way of using:
First way: Inside same class--- No need to write className
Second way: Inside anoter class we want to call our method, both classes are in the same package
   Write ClassName.methodName   : Calculator.add()
Third Case: DÄ°fferent class and different package:
    import the class first:  import week09.Calculator;
        Write ClassName.methodName   : Calculator.add()


       /*      A B Balanced
       	 * * Write a program that will accept a String and check if the a's and b's in the String are
       	 * balanced. A String is balanced whenever there is an 'a' character and somewhere later
       	 * in the String there is a 'b' character
       	Ex:
       		Input: "abcab"
       		Output: "balanced"

       		Input: "bacdf"
       		Output: "not balanced"

       		Input: "ayeba"
       		Output: "not balanced"
       	 */

